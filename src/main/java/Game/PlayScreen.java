/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Game;

/**
 *
 * @author abban
 */
public class PlayScreen extends javax.swing.JFrame {

    /**
     * Creates new form PlayScreen
     */
    public PlayScreen() {
        initComponents();
    }
    public PlayScreen(String goldmoney,String resistance,String damage,String loot,String kill,String level) {
        initComponents();
        GoldLabel.setText(goldmoney);
        ResistanceLabel.setText(resistance);
        LootmultiplierLabel.setText(loot);
        DamageMultiplierLabel.setText(damage);
        KillLabel.setText(kill);
        LevelLabel.setText(level);
        int levelnum = Integer.parseInt(level);
        if(levelnum >= 100){
            EnemyLabel.setText("Lovishk    HP:");
           EnemyHealth.setText(String.valueOf(5000000));
        }
        else if(levelnum >= 40){
            EnemyLabel.setText("Riddler    HP:");
            EnemyHealth.setText(String.valueOf(2000));
        }
        else if(levelnum >= 20){
            EnemyLabel.setText("CR-King    HP:");
            EnemyHealth.setText(String.valueOf(1000));
        }
        else if(levelnum >= 10){
            EnemyLabel.setText("Ben    HP:");
            EnemyHealth.setText(String.valueOf(400));
        }
        else if(levelnum >= 5){
            EnemyLabel.setText("Mr.Crab    HP:");
            EnemyHealth.setText(String.valueOf(200));
        }
        else if(levelnum <= 5){
            EnemyLabel.setText("Killerbunny1619   HP:");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        WhatHappenedTextField = new javax.swing.JTextField();
        EnemyLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        FireballButton = new javax.swing.JButton();
        HealButton = new javax.swing.JButton();
        SlashButton = new javax.swing.JButton();
        ChillButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        StaminaLabel = new javax.swing.JLabel();
        GoldLabel = new javax.swing.JLabel();
        StaminaValueLabel = new javax.swing.JLabel();
        PlayerHealth = new javax.swing.JLabel();
        EnemyHealth = new javax.swing.JLabel();
        ActionDialogTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ResistanceLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        LootmultiplierLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        DamageMultiplierLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        LevelLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        KillLabel = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        EnemyLabel.setText("Mr.Crab    HP:");

        jLabel1.setText("Player   HP:");

        FireballButton.setText("Fireball");
        FireballButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FireballButtonActionPerformed(evt);
            }
        });

        HealButton.setText("Heal");
        HealButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HealButtonActionPerformed(evt);
            }
        });

        SlashButton.setText("Slash");
        SlashButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SlashButtonActionPerformed(evt);
            }
        });

        ChillButton.setText("Chill");
        ChillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChillButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Gold: ");

        StaminaLabel.setText("Stamina: ");

        StaminaValueLabel.setText("10");

        PlayerHealth.setText("100");

        EnemyHealth.setText("100");

        ActionDialogTextField.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                ActionDialogTextFieldInputMethodTextChanged(evt);
            }
        });
        ActionDialogTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActionDialogTextFieldActionPerformed(evt);
            }
        });

        jButton1.setText("Kill Boss");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Status:");

        jLabel4.setText("Resistance: ");

        ResistanceLabel.setText("1");

        jLabel5.setText("Loot multiplier:");

        LootmultiplierLabel.setText("1");

        jLabel6.setText("Damage multiplier");

        DamageMultiplierLabel.setText("1");

        jLabel7.setText("Level:");

        jLabel9.setText("XP:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(SlashButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(FireballButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(79, 79, 79))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EnemyLabel)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel1)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(LevelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EnemyHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(DamageMultiplierLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))))
                            .addComponent(PlayerHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(ActionDialogTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GoldLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(StaminaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(StaminaValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                                    .addComponent(ResistanceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LootmultiplierLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(HealButton)
                    .addComponent(ChillButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(129, 129, 129))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(KillLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ActionDialogTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EnemyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EnemyHealth))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(KillLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(LootmultiplierLabel)
                                    .addComponent(jLabel7)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(DamageMultiplierLabel)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LevelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(jLabel8))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(ResistanceLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(PlayerHealth))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FireballButton)
                    .addComponent(HealButton))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChillButton)
                    .addComponent(SlashButton))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StaminaLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(StaminaValueLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(GoldLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FireballButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FireballButtonActionPerformed
        // TODO add your handling code here:
        int stamina = Integer.parseInt(StaminaValueLabel.getText());
        int enemy = Integer.parseInt(EnemyHealth.getText());
        int player = Integer.parseInt(PlayerHealth.getText());
        int money = Integer.parseInt(GoldLabel.getText());
        double resistances = Double.parseDouble(ResistanceLabel.getText());
        double damage = Double.parseDouble(DamageMultiplierLabel.getText());
        double moneymoney = Double.parseDouble(LootmultiplierLabel.getText());
        String level = LevelLabel.getText();
        int levelnum = Integer.parseInt(level);
        if(stamina >= 4){
            ActionDialogTextField.setText("ATTACK SUCCESSFUL");
            enemy = (int) (enemy - (25*damage));
            stamina = stamina - 4;
        }
        else if(stamina < 4){
            ActionDialogTextField.setText("ATTACK FAILED");
        }
        double random = Math.random()*4+1;
        int randomz = (int)random;
        if(randomz == 1){
            player = (int) (player - ((25*(levelnum-0.5))/resistances));
        }
        else if(randomz == 2){
            enemy = enemy + 10;
        }
        else if(randomz == 3){
            enemy = enemy - 5;
        }
        else if(randomz == 4){
            player = (int) (player - ((12*(levelnum-0.5))/resistances));
        }
        String stamine = String.valueOf(stamina);
        String enemyz = String.valueOf(enemy);
        String playerz = String.valueOf(player);
        StaminaValueLabel.setText(stamine);
        EnemyHealth.setText(enemyz);
        PlayerHealth.setText(playerz);
        if(stamina <= 0){
            String kill = KillLabel.getText();
            String cash = GoldLabel.getText();
            String re = ResistanceLabel.getText();
            String lootz = LootmultiplierLabel.getText();
            String damagez = DamageMultiplierLabel.getText();
            new FrontScreen(cash,re,damagez,lootz,kill,level).setVisible(true);
            setVisible(false);
        }
        if(player <= 0){
            String kill = KillLabel.getText();
            String cash = GoldLabel.getText();
            String re = ResistanceLabel.getText();
            String lootz = LootmultiplierLabel.getText();
            String damagez = DamageMultiplierLabel.getText();
            new FrontScreen(cash,re,damagez,lootz,kill,level).setVisible(true);
            setVisible(false);
        }
        if(enemy <= 0){
            String kill = KillLabel.getText();
            int killnum = Integer.parseInt(kill) + 1;
            kill = String.valueOf(killnum);
            KillLabel.setText(kill);
            money = (int)(money + (25*moneymoney));
            String gold = String.valueOf(money);
            GoldLabel.setText(gold);
            String cash = GoldLabel.getText();
            String re = ResistanceLabel.getText();
            String lootz = LootmultiplierLabel.getText();
            String damagez = DamageMultiplierLabel.getText();
            new FrontScreen(cash,re,damagez,lootz,kill,level).setVisible(true);
            setVisible(false);
        }
        
    }//GEN-LAST:event_FireballButtonActionPerformed

    private void HealButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HealButtonActionPerformed
        // TODO add your handling code here:
        int stamina = Integer.parseInt(StaminaValueLabel.getText());
        int enemy = Integer.parseInt(EnemyHealth.getText());
        int player = Integer.parseInt(PlayerHealth.getText());
        int money = Integer.parseInt(GoldLabel.getText());
        double resistances = Double.parseDouble(ResistanceLabel.getText());
        double moneymoney = Double.parseDouble(LootmultiplierLabel.getText());
        String level = LevelLabel.getText();
        int levelnum = Integer.parseInt(level);
        
        if(stamina >= 1){
            ActionDialogTextField.setText("HEAL SUCCESSFUL");
            stamina = stamina - 1;
            player = player + 10;
        }
        else if(stamina < 0){
            ActionDialogTextField.setText("HEAL FAILED");
            setVisible(false);
        }
        double random = Math.random()*4+1;
        int randomz = (int)random;
        if(randomz == 1){
            player = (int) (player - ((25*(levelnum - 0.5))/resistances));
        }
        else if(randomz == 2){
            enemy = enemy + 10;
        }
        else if(randomz == 3){
            enemy = enemy - 5;
        }
        else if(randomz == 4){
            player = (int) (player - ((12*(levelnum-0.5))/resistances));
        }
        String stamine = String.valueOf(stamina);
        String enemyz = String.valueOf(enemy);
        String playerz = String.valueOf(player);
        StaminaValueLabel.setText(stamine);
        EnemyHealth.setText(enemyz);
        PlayerHealth.setText(playerz);
        if(stamina <= 0){
            String kill = KillLabel.getText();
            String cash = GoldLabel.getText();
            String re = ResistanceLabel.getText();
            String lootz = LootmultiplierLabel.getText();
            String damagez = DamageMultiplierLabel.getText();
            new FrontScreen(cash,re,damagez,lootz,kill,level).setVisible(true);
            setVisible(false);
        }
        if(player <= 0){
            String kill = KillLabel.getText();
            String cash = GoldLabel.getText();
            String re = ResistanceLabel.getText();
            String lootz = LootmultiplierLabel.getText();
            String damagez = DamageMultiplierLabel.getText();
            new FrontScreen(cash,re,damagez,lootz,kill,level).setVisible(true);
            setVisible(false);
        }
        if(enemy <= 0){
            String kill = KillLabel.getText();
            int killnum = Integer.parseInt(kill) + 1;
            kill = String.valueOf(killnum);
            KillLabel.setText(kill);
            money = (int)(money + (25*moneymoney));
            String gold = String.valueOf(money);
            GoldLabel.setText(gold);
            String cash = GoldLabel.getText();
            String re = ResistanceLabel.getText();
            String lootz = LootmultiplierLabel.getText();
            String damagez = DamageMultiplierLabel.getText();
            new FrontScreen(cash,re,damagez,lootz,kill,level).setVisible(true);
            setVisible(false);
        }
        
    }//GEN-LAST:event_HealButtonActionPerformed

    private void ChillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChillButtonActionPerformed
        // TODO add your handling code here:
        int stamina = Integer.parseInt(StaminaValueLabel.getText());
        int enemy = Integer.parseInt(EnemyHealth.getText());
        int player = Integer.parseInt(PlayerHealth.getText());
        int money = Integer.parseInt(GoldLabel.getText());
        double resistances = Double.parseDouble(ResistanceLabel.getText());
        double moneymoney = Double.parseDouble(LootmultiplierLabel.getText());
        String level = LevelLabel.getText();
        int levelnum = Integer.parseInt(level);
        
        if(stamina >= 1){
            ActionDialogTextField.setText("CHILL SUCCESSFUL");
            stamina = stamina + 1;
        }
        else if(stamina < 0){
            ActionDialogTextField.setText("CHILL FAILED");
            setVisible(false);
        }
        double random = Math.random()*4+1;
        int randomz = (int)random;
        if(randomz == 1){
            player = (int) (player - ((25*(levelnum-0.5))/resistances));
        }
        else if(randomz == 2){
            enemy = enemy + 10;
        }
        else if(randomz == 3){
            enemy = enemy - 5;
        }
        else if(randomz == 4){
            player = (int) (player - ((12)*(levelnum-0.5)/resistances));
        }
        String stamine = String.valueOf(stamina);
        String enemyz = String.valueOf(enemy);
        String playerz = String.valueOf(player);
        StaminaValueLabel.setText(stamine);
        EnemyHealth.setText(enemyz);
        PlayerHealth.setText(playerz);
        if(stamina <= 0){
            String kill = KillLabel.getText();
            String cash = GoldLabel.getText();
            String re = ResistanceLabel.getText();
            String lootz = LootmultiplierLabel.getText();
            String damagez = DamageMultiplierLabel.getText();
            new FrontScreen(cash,re,damagez,lootz,kill,level).setVisible(true);
            setVisible(false);
        }
        if(player <= 0){
            String kill = KillLabel.getText();
            String cash = GoldLabel.getText();
            String re = ResistanceLabel.getText();
            String lootz = LootmultiplierLabel.getText();
            String damagez = DamageMultiplierLabel.getText();
            new FrontScreen(cash,re,damagez,lootz,kill,level).setVisible(true);
            setVisible(false);
        }
        if(enemy <= 0){
            String kill = KillLabel.getText();
            int killnum = Integer.parseInt(kill) + 1;
            kill = String.valueOf(killnum);
            KillLabel.setText(kill);
            money = (int)(money + (25*moneymoney));
            String gold = String.valueOf(money);
            GoldLabel.setText(gold);
            String cash = GoldLabel.getText();
            String re = ResistanceLabel.getText();
            String lootz = LootmultiplierLabel.getText();
            String damagez = DamageMultiplierLabel.getText();
            new FrontScreen(cash,re,damagez,lootz,kill,level).setVisible(true);
            setVisible(false);
        }
    }//GEN-LAST:event_ChillButtonActionPerformed

    private void SlashButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SlashButtonActionPerformed
        // TODO add your handling code here:
        int stamina = Integer.parseInt(StaminaValueLabel.getText());
        int enemy = Integer.parseInt(EnemyHealth.getText());
        int player = Integer.parseInt(PlayerHealth.getText());
        int money = Integer.parseInt(GoldLabel.getText());
        double resistances = Double.parseDouble(ResistanceLabel.getText());
        double damage = Double.parseDouble(DamageMultiplierLabel.getText());
        double moneymoney = Double.parseDouble(LootmultiplierLabel.getText());
        String level = LevelLabel.getText();
        int levelnum = Integer.parseInt(level);
        
        if(stamina >= 2){
            ActionDialogTextField.setText("SLASH SUCCESSFUL");
            stamina = stamina - 2;
            enemy = (int)(enemy - (12*damage));
        }
        else if(stamina < 2){
            ActionDialogTextField.setText("SLASH FAILED");
            setVisible(false);
        }
        double random = Math.random()*4+1;
        int randomz = (int)random;
        if(randomz == 1){
            player = (int) (player - ((25*(levelnum-0.5))/resistances));
        }
        else if(randomz == 2){
            enemy = enemy + 10;
        }
        else if(randomz == 3){
            enemy = enemy - 5;
        }
        else if(randomz == 4){
            player = (int) (player - ((12*(levelnum-0.5))/resistances));
        }
        String stamine = String.valueOf(stamina);
        String enemyz = String.valueOf(enemy);
        String playerz = String.valueOf(player);
        StaminaValueLabel.setText(stamine);
        EnemyHealth.setText(enemyz);
        PlayerHealth.setText(playerz);
        if(stamina <= 0){
            String kill = KillLabel.getText();
            String cash = GoldLabel.getText();
            String re = ResistanceLabel.getText();
            String lootz = LootmultiplierLabel.getText();
            String damagez = DamageMultiplierLabel.getText();
            new FrontScreen(cash,re,damagez,lootz,kill,level).setVisible(true);
            setVisible(false);
        }
        if(player <= 0){
            String kill = KillLabel.getText();
            String cash = GoldLabel.getText();
            String re = ResistanceLabel.getText();
            String lootz = LootmultiplierLabel.getText();
            String damagez = DamageMultiplierLabel.getText();
            new FrontScreen(cash,re,damagez,lootz,kill,level).setVisible(true);
            setVisible(false);
        }
        if(enemy <= 0){
            String kill = KillLabel.getText();
            int killnum = Integer.parseInt(kill) + 1;
            kill = String.valueOf(killnum);
            KillLabel.setText(kill);
            money = (int) (money + (25*moneymoney));
            String gold = String.valueOf(money);
            GoldLabel.setText(gold);
            String cash = GoldLabel.getText();
            String re = ResistanceLabel.getText();
            String lootz = LootmultiplierLabel.getText();
            String damagez = DamageMultiplierLabel.getText();
            new FrontScreen(cash,re,damagez,lootz,kill,level).setVisible(true);
            setVisible(false);
        }
    }//GEN-LAST:event_SlashButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            int money = Integer.parseInt(GoldLabel.getText());
            double moneymoney = Double.parseDouble(LootmultiplierLabel.getText());
            money = (int) (money + (10000000*moneymoney));
            String gold = String.valueOf(money);
            GoldLabel.setText(gold);
            String cash = GoldLabel.getText();
            String re = ResistanceLabel.getText();           
            String lootz = LootmultiplierLabel.getText();
            String damagez = DamageMultiplierLabel.getText();
            String kill = KillLabel.getText();
            int killnum = Integer.parseInt(kill) + 1;
            kill = String.valueOf(killnum);
            KillLabel.setText(kill);
            String level = LevelLabel.getText();
            new FrontScreen(cash,re,damagez,lootz,kill,level).setVisible(true);
            setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ActionDialogTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActionDialogTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ActionDialogTextFieldActionPerformed

    private void ActionDialogTextFieldInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_ActionDialogTextFieldInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ActionDialogTextFieldInputMethodTextChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ActionDialogTextField;
    private javax.swing.JButton ChillButton;
    private javax.swing.JLabel DamageMultiplierLabel;
    private javax.swing.JLabel EnemyHealth;
    private javax.swing.JLabel EnemyLabel;
    private javax.swing.JButton FireballButton;
    private javax.swing.JLabel GoldLabel;
    private javax.swing.JButton HealButton;
    private javax.swing.JLabel KillLabel;
    private javax.swing.JLabel LevelLabel;
    private javax.swing.JLabel LootmultiplierLabel;
    private javax.swing.JLabel PlayerHealth;
    private javax.swing.JLabel ResistanceLabel;
    private javax.swing.JButton SlashButton;
    private javax.swing.JLabel StaminaLabel;
    private javax.swing.JLabel StaminaValueLabel;
    private javax.swing.JTextField WhatHappenedTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

}
